% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mt_extra.R
\name{locfdr_filter}
\alias{locfdr_filter}
\title{Filtering variable based on local false discovery rate}
\usage{
locfdr_filter(x, plot = 1, thres = NULL, ...)
}
\arguments{
\item{x}{a data matrix}

\item{plot}{an integer for plotting. 0 gives no plots. 1 gives single
plot showing the histogram of zz and fitted densities f and p0*f0.}

\item{thres}{a user defined threshold for filtering. The default is NULL,
which use local FDR as threshold for filtering.}

\item{...}{other parameters to be passed to \code{locfdr}.}
}
\value{
a list of with contents: \itemize{
\item dat the filtered data matrix.
\item idx a vector of filtering index.
\item thres threshold used for filtering.
}
}
\description{
Filter data based on local false discovery rate. This function uses \code{z.2}
of \code{locfdr}.
}
\details{
\itemize{
\item Keep the variables which have at least one significant element. The
significant element is defined as larger than the lower of threshold or
less than the upper of threshold.
\item Threshold can be given by user or be estimated by \code{locfdr}, i.e. the
returned \code{z.2} as a threshold. It is not guaranteed that \code{locfdr}
\code{z.2}. If not, user must provide this value.
\item From R package \code{locfdr} vignette:
\code{z.2} is the interval along the zz-axis outside of which \code{fdr(z) < 0.2},
the locations of the yellow triangles in the histogram plot. If no
elements of \code{zz} on the left or right satisfy the criterion, the
corresponding element of z.2 is NA, and the corresponding triangle does
not appear.
}
}
\examples{
\dontrun{
library(dplyr)
library(tidyr)
library(purrr)
library(readr)

## get ionomics data
dat <- read_csv("https://github.com/wanchanglin/ionflow/raw/master/extra/paper_ko.csv")
dim(dat)

## missing values filling with mean
dat <- dat \%>\% 
  mutate(across(where(is.numeric), function(x) {
    m <- mean(x, na.rm = TRUE)
    x[is.na(x)] <- m
    x
  }))
dat

res <- locfdr_filter(t(dat[, -1]), plot = 1)
res$thres

## filter data
dat <- dat[res$idx, , drop = FALSE]

## symbolise data
dat_sym <- dat \%>\% 
  mutate(across(where(is.numeric), ~ dat_symb(., thres = res$thres)))
}
}
\seealso{
\code{\link[=locfdr]{locfdr()}}

Other variable filters: 
\code{\link{blank_filter}()},
\code{\link{mv_filter}()},
\code{\link{qc_filter}()},
\code{\link{rsd_filter}()},
\code{\link{var_filter}()}
}
\concept{variable filters}
